version: "3"

networks:
  web:

volumes:
  jenkins-docker-certs:
  jenkins-data:

services:
  reverse-proxy:
    image: traefik:latest
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
        #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=jasonhong0810@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  blog:
    image: jasonhongxyz/blog
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blog.rule=Host(`jasonhong.xyz`) || Host(`www.jasonhong.xyz`)" # || Host(`localhost`)"
      - "traefik.http.routers.blog.entrypoints=websecure"
      - "traefik.http.routers.blog.tls.certresolver=myresolver"
    restart: always

  tictactoe:
    image: jasonhongxyz/tictactoe
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tictactoe.rule=Host(`tictactoe.jasonhong.xyz`) || Host(`www.tictactoe.jasonhong.xyz`)" # || Host(`localhost`)"
      - "traefik.http.routers.tictactoe.entrypoints=websecure"
      - "traefik.http.routers.tictactoe.tls.certresolver=myresolver"


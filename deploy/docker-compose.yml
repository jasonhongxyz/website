version: "3"

networks:
  web:

volumes:
  jenkins-docker-certs:
  jenkins-data:

services:
  reverse-proxy:
    image: traefik:latest
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  blog:
    image: jasonhongxyz/blog
    labels:
      - traefik.http.routers.blog.rule=Host(`blog.jasonhong.xyz`) || Host(`blog.localhost`)
      - traefik.port=80
    restart: always

  docker:
    image: docker:dind
    container_name: jenkins-docker
    # network_mode: web
    environment:
      - 'DOCKER_TLS_CERTDIR=/certs'
    volumes:
      - 'jenkins-docker-certs:/certs/client'
      - 'jenkins-data:/var/jenkins_home'
    ports:
      - '2376:2376'
    privileged: true
    command: '--storage-driver=overlay2'

  myjenkins:
    image: jasonhongxyz/myjenkins
    container_name: jenkins-blueocean
    restart: on-failure
    # network_mode: web
    environment:
      - 'DOCKER_HOST=tcp://docker:2376'
      - 'DOCKER_CERT_PATH=/certs/client'
      - 'DOCKER_TLS_VERIFY=1'
    labels:
      - traefik.http.routers.ci.rule=Host(`ci.jasonhong.xyz`) || Host(`ci.localhost`)
      - traefik.port = 80
    volumes:
      - 'jenkins-data:/var/jenkins_home'
      - 'jenkins-docker-certs:/certs/client:ro'

